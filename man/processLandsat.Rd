% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocessing_landsat.R
\name{processLandsat}
\alias{processLandsat}
\alias{processLandsatBatch}
\title{Wrapper functions to process Landsat data}
\usage{
processLandsat(x, outdir, vi = "ndvi", srdir = NULL, delete = FALSE,
  mask = NULL, keep = c(0), e = NULL, fileExt = "grd",
  overwrite = FALSE)

processLandsatBatch(x, pattern = NULL, outdir, mc.cores = 1, ...)
}
\arguments{
\item{x}{Character. filename of the tarball or directory containing geotiff files. Or simply a directory containing the archives in the case of the batcher (\code{processLandsatBatch}).}

\item{outdir}{Character. Parent directory where the vegetation index rasterLayer should be written. Each vegetation index (or band) processed will be written to a sub directory of outdir.}

\item{vi}{Character or vector of characters. Vegetation index to be computed or extracted from the archive. The supported indices at the moment are 'ndvi', 'evi', 'savi', 'ndmi', 'ndwi', 'mndwi', 'tcb', 'tcg', 'tcw', 'nbr', 'nbr2'* or 'msavi'*. Indices with * need to be present in the archive. Note that the \code{vi=} argument can also be used to directly extract surface reflectance bands. \code{vi='sr_band1'} for instance will extract surface reflectance band 1 from the archive and perform the same pre-processing steps as if it was a vegetation index layer.}

\item{srdir}{Character. Directory where the tarball should be uncompressed. If set to NULL (default), a temporary location (see \code{raster::tmpDir()}) is used. When the \code{x} argument points to a directory, the same value is automatically assigned to both arguments.}

\item{delete}{Logical. Should surface reflectance files that have been unpacked (in \code{srdir}) for the processing be deleted at the end of the process? (usefull for disk space management; surface reflectance files are very voluminous and a user may want to keep the Landsat archive in compressed format only)}

\item{mask}{Character or NULL. The name of the mask to be applied to the bands (e.g.: \code{mask = 'fmask'})}

\item{keep}{Numeric. Can take multiple values. Which values of the mask layer should be kept?}

\item{e}{Extent object or object that can be coerced as extent.}

\item{fileExt}{Character. Extension of the file to be generated. Note that \code{filename} is automatically generated}

\item{overwrite}{Logical. Overwrite exiting files if they already exist.}

\item{pattern}{character. Applies only to \code{landsatProcessBatch} when \code{x} is of length 1. Allows to 'filter' the input files or directories. See \link{list.files} for more details.}

\item{mc.cores}{Numeric. \code{landsatProcessBatch} only. For multicore implementation only. See \link{mclapply}}
}
\value{
The function is used for its side effect of processing raster files written to subdirectories of \code{outdir} and does not return anything.
}
\description{
Processes Landsat data (a single scene for \code{processLandsat} and multiple scenes for \code{processLandsatBatch}), from tarball or directory containing surface reflectance bands to vegetation index. The data must be surface reflectance obtained from espa (\url{https://espa.cr.usgs.gov/}). These data may already contained pre-processed indices layers, in which case they are directly used. The batcher (\code{processLandsatBatch}) allows to process multiple scenes with one command; sequentially or in parallel (parallel processing only work on unix systems (linux and mac)).
}
\examples{
### processLandsat Example
# Get list of test data files
library(raster)

dir <- system.file('external', package='bfastSpatial')
list <- list.files(dir, full.names=TRUE)

# Set the location of output directory (in tmpdir for the example)
dirout <- file.path(rasterOptions()$tmpdir, 'bfastSpatial')
dir.create(dirout, showWarning=FALSE)
# Generate (or extract, depending on whether the layers are already in the archive or not) NDVI and tcg for the first archive file
processLandsat(x=list[1], vi=c('ndvi', 'tcg'), outdir=dirout, delete=TRUE, mask='cfmask', keep=0, overwrite=TRUE)

# Visualize one of the layers produced
list <- list.files(dirout, pattern=glob2rx('*.grd'), full.names=TRUE)
plot(r <- raster(list[1]))

### processLandsatBatch Example
# Get the directory where the Landsat archives are stored
dir <- system.file('external', package='bfastSpatial')

# Set the location of output directory (we'll use the temporary directory from the raster package)
dirout <- file.path(rasterOptions()$tmpdir, 'bfmspatial')
dir.create(dirout, showWarning=FALSE)
processLandsatBatch(x=dir, pattern=glob2rx('*.gz'), outdir=dirout, delete=TRUE, vi=c('ndvi', 'sr_band4'), mask='cfmask', keep=0, overwrite=TRUE)

# Visualize one of the layers produced
list <- list.files(dirout, pattern=glob2rx('*.grd'), full.names=TRUE)
plot(r <- raster(list[1]))
}
\author{
Loic Dutrieux
}
