% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annualComposite.R
\name{annualComposite}
\alias{annualComposite}
\title{Annual temporal composite from a time series RasterBrick}
\usage{
annualComposite(x, fun, period = NULL, dates = NULL, years = NULL,
  sensor = NULL, na.rm = NULL, ...)
}
\arguments{
\item{x}{RasterBrick or RasterStack}

\item{fun}{Function to apply over each pixel for each defined period}

\item{period}{Numeric. Optional: vector of julian days to limit the calculation. Can be used to restrict compositing to a specific season, for example.}

\item{dates}{Date. Optional: vector of dates exactly corresponding to the layers of x. If not included, dates must be included in the z dimension of x (see \code{\link{getZ}}) or in \code{names(x)}.}

\item{years}{Numeric. Optional: Vector of years to which to limit the composite.}

\item{sensor}{Character. Optional: limit calculation to images from a particular sensor. Defaults to "all", but can take any of "TM", "ETM+", "ETM+ SLC-off" or "ETM+ SLC-on". Will be ignored with a warning if \code{names(x)} do not correspond to Landsat scene ID's.}

\item{...}{Arguments to be passed to \code{\link{mc.calc}}}
}
\value{
RasterBrick with results of \code{fun} for each year represented in the input time series RasterBrick.
}
\description{
Generates annual temporal composites based on a time series RasterBrick with the option to restrict to a given period of the year
}
\details{
If \code{fun} takes a \code{na.rm} argument and none is supplied, the default value for \code{na.rm} for that function will be used.
}
\examples{
# load tura RasterBrick
data(tura)

# calculate mean NDVI and standard deviation per year for ETM+ data only
annualMean <- annualComposite(tura, fun=mean, na.rm=TRUE, sensor="ETM+")
plot(annualMean, zlim = c(4000, 10000))
annualSD <- annualComposite(tura, fun=sd, na.rm=TRUE, sensor="ETM+")
plot(annualSD, zlim = c(0, 4000))

# custom function to calculate # of non-NA values per pixel per year (similar to countObs())
ff <- function(x)
 sum(!is.na(x))
annualObs <- annualComposite(tura, fun = ff, sensor = "ETM+")
plot(annualObs, zlim = c(0, 15))

## median NDVI for dry and rainy seasons (approx. October to April)

# get start and end of rainy season as julian days
rainStart <- as.numeric(format(as.Date('2000-05-01'), format = '\%j'))
rainEnd <- as.numeric(format(as.Date('2000-09-30'), format = '\%j'))

# compute median NDVI for dry season periods only
medNDVIdry <- annualComposite(tura, fun = median, na.rm = TRUE, period = c(1:rainStart-1, rainEnd+1:365), sensor = "ETM+")
plot(medNDVIdry, zlim = c(2500, 10000))

# compute median NDVI for rainy season periods only
medNDVIrain <- annualComposite(tura, fun = median, na.rm = TRUE, period = c(rainStart:rainEnd), sensor = "ETM+")
plot(medNDVIrain, zlim = c(2500, 10000))

# observation counts per season
nobsDry <- annualComposite(tura, fun = ff, period = c(1:rainStart-1, rainEnd+1:365), sensor = "ETM+")
plot(nobsDry, zlim = c(0, 16))
nobsRain <- annualComposite(tura, fun = ff, period = c(rainStart:rainEnd), sensor = "ETM+")
plot(nobsRain, zlim = c(0, 16))
plot(nobsDry - nobsRain, zlim = c(-10, 10))

}
\author{
Ben DeVries
}
\seealso{
\code{\link{summaryBrick}}
}

